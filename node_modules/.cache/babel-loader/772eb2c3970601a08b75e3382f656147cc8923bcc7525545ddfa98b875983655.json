{"ast":null,"code":"var _jsxFileName = \"/Users/satyaranjan/Desktop/react/projects/jsonvalidator/src/JsonTool.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './JsonTool.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JsonTool() {\n  _s();\n  const [jsonInput, setJsonInput] = useState('');\n  const [error, setError] = useState('');\n  const [lineNumbers, setLineNumbers] = useState('1');\n  const [historyVisible, setHistoryVisible] = useState(false);\n  const [history, setHistory] = useState(() => JSON.parse(sessionStorage.getItem('jsonHistory')) || []);\n  const textareaRef = useRef(null);\n  const lineNumbersRef = useRef(null);\n  const handleInputChange = event => {\n    setJsonInput(event.target.value);\n    setError('');\n    updateLineNumbers(event.target.value);\n  };\n  const validateJson = () => {\n    try {\n      const parsedJson = JSON.parse(jsonInput);\n      const formattedJson = JSON.stringify(parsedJson, null, 2);\n      setJsonInput(formattedJson);\n      updateLineNumbers(formattedJson);\n      updateHistory(formattedJson);\n      setError('');\n    } catch (err) {\n      setError(`Invalid JSON! Error: ${err.message}`);\n    }\n  };\n  const compressJson = () => {\n    try {\n      const parsedJson = JSON.parse(jsonInput);\n      const compressedJson = JSON.stringify(parsedJson);\n      setJsonInput(compressedJson);\n      updateLineNumbers(compressedJson);\n      updateHistory(compressedJson);\n      setError('');\n    } catch (err) {\n      setError(`Cannot compress JSON! Error: ${err.message}`);\n    }\n  };\n  const clearJson = () => {\n    setJsonInput('');\n    setError('');\n    setLineNumbers('1'); // Reset line numbers\n  };\n  const copyText = () => {\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(jsonInput).then(() => {\n        alert('Copied to clipboard!');\n      }).catch(err => {\n        setError(`Failed to copy text: ${err.message}`);\n      });\n    } else {\n      setError('Clipboard API not available.');\n    }\n  };\n  const updateLineNumbers = text => {\n    const lines = text.split('\\n');\n    const newLineNumbers = lines.map((_, index) => index + 1).join('\\n');\n    setLineNumbers(newLineNumbers);\n    if (lineNumbersRef.current) {\n      lineNumbersRef.current.scrollTop = textareaRef.current.scrollTop;\n    }\n  };\n  const handleScroll = () => {\n    if (lineNumbersRef.current) {\n      lineNumbersRef.current.scrollTop = textareaRef.current.scrollTop;\n    }\n  };\n  const updateHistory = json => {\n    const newEntry = {\n      json,\n      timestamp: new Date().toLocaleString()\n    };\n    const newHistory = [newEntry, ...history].slice(0, 50); // Keep only the latest 50 entries\n    setHistory(newHistory);\n    sessionStorage.setItem('jsonHistory', JSON.stringify(newHistory));\n  };\n  const toggleHistory = () => {\n    setHistoryVisible(!historyVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"json-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"json-heading\",\n      children: \"Check you JSON here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"json-text-area\",\n      ref: textareaRef,\n      value: jsonInput,\n      onChange: handleInputChange,\n      onScroll: handleScroll,\n      rows: \"10\",\n      cols: \"50\",\n      placeholder: \"Enter JSON here...\",\n      style: {\n        resize: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: validateJson,\n        children: \"Validate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: compressJson,\n        children: \"Compress JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: clearJson,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: toggleHistory,\n        children: historyVisible ? 'Hide History' : 'Show History'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), jsonInput && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: copyText,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: copyText,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }, this), historyVisible && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: history.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.timestamp, \": \", entry.json]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(JsonTool, \"xT4DmJV8NT+N4XKAT7THUxuOmSw=\");\n_c = JsonTool;\nexport default JsonTool;\nvar _c;\n$RefreshReg$(_c, \"JsonTool\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","JsonTool","_s","jsonInput","setJsonInput","error","setError","lineNumbers","setLineNumbers","historyVisible","setHistoryVisible","history","setHistory","JSON","parse","sessionStorage","getItem","textareaRef","lineNumbersRef","handleInputChange","event","target","value","updateLineNumbers","validateJson","parsedJson","formattedJson","stringify","updateHistory","err","message","compressJson","compressedJson","clearJson","copyText","navigator","clipboard","writeText","then","alert","catch","text","lines","split","newLineNumbers","map","_","index","join","current","scrollTop","handleScroll","json","newEntry","timestamp","Date","toLocaleString","newHistory","slice","setItem","toggleHistory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","onScroll","rows","cols","placeholder","style","resize","onClick","color","entry","_c","$RefreshReg$"],"sources":["/Users/satyaranjan/Desktop/react/projects/jsonvalidator/src/JsonTool.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './JsonTool.css';\n\nfunction JsonTool() {\n    const [jsonInput, setJsonInput] = useState('');\n    const [error, setError] = useState('');\n    const [lineNumbers, setLineNumbers] = useState('1'); \n    const [historyVisible, setHistoryVisible] = useState(false);\n    const [history, setHistory] = useState(\n        () => JSON.parse(sessionStorage.getItem('jsonHistory')) || []\n    );\n    const textareaRef = useRef(null);\n    const lineNumbersRef = useRef(null);\n\n    const handleInputChange = (event) => {\n        setJsonInput(event.target.value);\n        setError(''); \n        updateLineNumbers(event.target.value);\n    };\n\n    const validateJson = () => {\n        try {\n            const parsedJson = JSON.parse(jsonInput);\n            const formattedJson = JSON.stringify(parsedJson, null, 2);\n            setJsonInput(formattedJson);\n            updateLineNumbers(formattedJson);\n            updateHistory(formattedJson);\n            setError('');\n        } catch (err) {\n            setError(`Invalid JSON! Error: ${err.message}`);\n        }\n    };\n\n    const compressJson = () => {\n        try {\n            const parsedJson = JSON.parse(jsonInput);\n            const compressedJson = JSON.stringify(parsedJson);\n            setJsonInput(compressedJson);\n            updateLineNumbers(compressedJson);\n            updateHistory(compressedJson);\n            setError('');\n        } catch (err) {\n            setError(`Cannot compress JSON! Error: ${err.message}`);\n        }\n    };\n\n    const clearJson = () => {\n        setJsonInput('');\n        setError('');\n        setLineNumbers('1'); // Reset line numbers\n    };\n\n    const copyText = () => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(jsonInput).then(() => {\n                alert('Copied to clipboard!');\n            }).catch(err => {\n                setError(`Failed to copy text: ${err.message}`);\n            });\n        } else {\n            setError('Clipboard API not available.');\n        }\n    };\n\n    const updateLineNumbers = (text) => {\n        const lines = text.split('\\n');\n        const newLineNumbers = lines.map((_, index) => index + 1).join('\\n');\n        setLineNumbers(newLineNumbers);\n        if (lineNumbersRef.current) {\n            lineNumbersRef.current.scrollTop = textareaRef.current.scrollTop;\n        }\n    };\n\n    const handleScroll = () => {\n        if (lineNumbersRef.current) {\n            lineNumbersRef.current.scrollTop = textareaRef.current.scrollTop;\n        }\n    };\n\n    const updateHistory = (json) => {\n        const newEntry = { json, timestamp: new Date().toLocaleString() };\n        const newHistory = [newEntry, ...history].slice(0, 50); // Keep only the latest 50 entries\n        setHistory(newHistory);\n        sessionStorage.setItem('jsonHistory', JSON.stringify(newHistory));\n    };\n\n    const toggleHistory = () => {\n        setHistoryVisible(!historyVisible);\n    };\n\n    return (\n        <div className='json-wrapper'>\n            <h3 className='json-heading'>Check you JSON here</h3>\n            <textarea\n                className='json-text-area'\n                ref={textareaRef}\n                value={jsonInput}\n                onChange={handleInputChange}\n                onScroll={handleScroll}\n                rows=\"10\"\n                cols=\"50\"\n                placeholder=\"Enter JSON here...\"\n                style={{ resize: 'none' }}\n            />\n            <div>\n                <button className='btn' onClick={validateJson}>Validate</button>\n                <button className='btn' onClick={compressJson}>Compress JSON</button>\n                <button className='btn' onClick={clearJson}>Clear</button>\n                <button className='btn' onClick={toggleHistory}>{historyVisible ? 'Hide History' : 'Show History'}</button>\n                {jsonInput && (\n                    <button className='btn' onClick={copyText}>Copy</button>\n                )}\n                <button className='btn' onClick={copyText}>Copy</button>\n            </div>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {historyVisible && (\n                <ul>\n                    {history.map((entry, index) => (\n                        <li key={index}>{entry.timestamp}: {entry.json}</li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n}\n\nexport default JsonTool;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}