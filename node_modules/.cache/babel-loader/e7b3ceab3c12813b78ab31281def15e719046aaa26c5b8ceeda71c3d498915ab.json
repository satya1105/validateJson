{"ast":null,"code":"var _jsxFileName = \"/Users/satyaranjan/Desktop/react/jsonvalidator/src/JsonComparator.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { diffLines, diffJson } from 'diff';  // Importing diff functions\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareJson = () => {\n//         try {\n//             const jsonOne = JSON.parse(inputOne);\n//             const jsonTwo = JSON.parse(inputTwo);\n//             const diff = diffJson(jsonOne, jsonTwo);\n//             const formattedDiff = diff.map(part => {\n//                 const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//                 return <span style={{ color: color }}>{part.value}</span>;\n//             });\n//             setDifferences(formattedDiff);\n//         } catch (error) {\n//             setDifferences(<p style={{ color: 'red' }}>Error parsing JSON: {error.message}</p>);\n//         }\n//     };\n\n//     const compareText = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         const formattedDiff = diff.map(part => {\n//             const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//             return <span style={{ color: color }}>{part.value}</span>;\n//         });\n//         setDifferences(formattedDiff);\n//     };\n\n//     return (\n//         <div>\n//             <h1>JSON/Code Comparator</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <div>\n//                 <button onClick={compareJson}>Compare JSON</button>\n//                 <button onClick={compareText}>Compare Text</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n// 222\n// import React, { useState } from 'react';\n// import { diffWordsWithSpace, diffLines } from 'diff'; // Functions for word and line diff\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleFileChange = (event, setter) => {\n//         const file = event.target.files[0];\n//         if (file) {\n//             const reader = new FileReader();\n//             reader.onload = (e) => {\n//                 setter(e.target.result);\n//             };\n//             reader.readAsText(file);\n//         }\n//     };\n\n//     const compareByLine = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         formatDiff(diff);\n//     };\n\n//     const compareByWord = () => {\n//         const diff = diffWordsWithSpace(inputOne, inputTwo);\n//         formatDiff(diff);\n//     };\n\n//     const formatDiff = (diff) => {\n//         const formattedDiff = diff.map((part, index) => (\n//             <span key={index} style={{ color: part.added ? 'green' : part.removed ? 'red' : 'black' }}>\n//                 {part.value}\n//             </span>\n//         ));\n//         setDifferences(formattedDiff);\n//     };\n\n//     return (\n//         <div>\n//             <h1>Compare JSON/Code</h1>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputOne)} />\n//                 <textarea\n//                     value={inputOne}\n//                     onChange={e => setInputOne(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Enter or upload JSON/code...\"\n//                 />\n//             </div>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputTwo)} />\n//                 <textarea\n//                     value={inputTwo}\n//                     onChange={e => setInputTwo(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Enter or upload JSON/code...\"\n//                 />\n//             </div>\n//             <div>\n//                 <button onClick={compareByLine}>Compare by Line</button>\n//                 <button onClick={compareByWord}>Compare by Word</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 <div style={{ whiteSpace: 'pre-wrap' }}>{differences}</div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n//3333\n\n// import React, { useState } from 'react';\n// import mammoth from 'mammoth';\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n\n//     const handleFileChange = (event, setter) => {\n//         const file = event.target.files[0];\n//         if (file) {\n//             mammoth.extractRawText({ arrayBuffer: file.slice() })\n//                 .then(result => {\n//                     setter(result.value);  // Set the extracted text in the textarea\n//                 })\n//                 .catch(err => {\n//                     setter(`Error reading file: ${err.message}`);\n//                 });\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Upload and Display Word Document</h1>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputOne)} accept=\".docx\" />\n//                 <textarea\n//                     value={inputOne}\n//                     onChange={e => setInputOne(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Text from the uploaded document will appear here...\"\n//                 />\n//             </div>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputTwo)} accept=\".docx\" />\n//                 <textarea\n//                     value={inputTwo}\n//                     onChange={e => setInputTwo(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Text from the uploaded document will appear here...\"\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n// 44444\n// import React, { useState } from 'react';\n// import { diffWordsWithSpace, diffLines } from 'diff'; // Functions for word and line diff\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleFileChange = (event, setter) => {\n//         const file = event.target.files[0];\n//         if (file) {\n//             const reader = new FileReader();\n//             reader.onload = (e) => {\n//                 console.log(\"File read successfully: \", e.target.result.substring(0, 100)); // Log first 100 characters of the file\n//                 setter(e.target.result);\n//             };\n//             reader.onerror = (error) => {\n//                 console.error(\"Error reading file: \", error);\n//                 setter(\"Failed to read file.\");\n//             };\n//             reader.readAsText(file);\n//         } else {\n//             console.log(\"No file chosen or file read was aborted.\");\n//         }\n//     };\n\n//     const compareByLine = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         formatDiff(diff);\n//     };\n\n//     const compareByWord = () => {\n//         const diff = diffWordsWithSpace(inputOne, inputTwo);\n//         formatDiff(diff);\n//     };\n\n//     const formatDiff = (diff) => {\n//         const formattedDiff = diff.map((part, index) => (\n//             <span key={index} style={{ color: part.added ? 'green' : part.removed ? 'red' : 'black' }}>\n//                 {part.value}\n//             </span>\n//         ));\n//         setDifferences(formattedDiff);\n//     };\n\n//     return (\n//         <div>\n//             <h1>Compare JSON/Code</h1>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputOne)} />\n//                 <textarea\n//                     value={inputOne}\n//                     onChange={e => setInputOne(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Enter or upload JSON/code...\"\n//                 />\n//             </div>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputTwo)} />\n//                 <textarea\n//                     value={inputTwo}\n//                     onChange={e => setInputTwo(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Enter or upload JSON/code...\"\n//                 />\n//             </div>\n//             <div>\n//                 <button onClick={compareByLine}>Compare by Line</button>\n//                 <button onClick={compareByWord}>Compare by Word</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 <div style={{ whiteSpace: 'pre-wrap' }}>{differences}</div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n//55555\n\n// import React, { useState } from 'react';\n// import { diffLines, diffJson } from 'diff';  // Importing diff functions\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareJson = () => {\n//         try {\n//             const jsonOne = JSON.parse(inputOne);\n//             const jsonTwo = JSON.parse(inputTwo);\n//             const diff = diffJson(jsonOne, jsonTwo);\n//             const formattedDiff = diff.map(part => {\n//                 const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//                 return <span style={{ color: color }}>{part.value}</span>;\n//             });\n//             setDifferences(formattedDiff);\n//         } catch (error) {\n//             setDifferences(<p style={{ color: 'red' }}>Error parsing JSON: {error.message}</p>);\n//         }\n//     };\n\n//     const compareText = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         const formattedDiff = diff.map(part => {\n//             const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//             return <span style={{ color: color }}>{part.value}</span>;\n//         });\n//         setDifferences(formattedDiff);\n//     };\n\n//     return (\n//         <div>\n//             <h1>JSON/Code Comparator</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <div>\n//                 <button onClick={compareJson}>Compare JSON</button>\n//                 <button onClick={compareText}>Compare Text</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n//6666\n\n// import React, { useState } from 'react';\n// import { diffLines, diffJson } from 'diff';  // Importing diff functions\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState(null);\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareInputs = () => {\n//         // Attempt JSON comparison first\n//         try {\n//             const jsonOne = JSON.parse(inputOne);\n//             const jsonTwo = JSON.parse(inputTwo);\n//             const diff = diffJson(jsonOne, jsonTwo);\n//             if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n//                 setDifferences('No differences found.');\n//             } else {\n//                 const formattedDiff = diff.map((part, index) => {\n//                     const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//                     return <span key={index} style={{ color: color }}>{part.value}</span>;\n//                 });\n//                 setDifferences(<div>{formattedDiff}</div>);\n//             }\n//         } catch {\n//             // Fallback to plain text comparison if JSON fails\n//             const diff = diffLines(inputOne, inputTwo);\n//             if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n//                 setDifferences('No differences found.');\n//             } else {\n//                 const formattedDiff = diff.map((part, index) => {\n//                     const color = part.added ? 'green' : part.removed ? 'red' : 'black';\n//                     return <span key={index} style={{ color: color }}>{part.value}</span>;\n//                 });\n//                 setDifferences(<div style={{ whiteSpace: 'pre-wrap' }}>{formattedDiff}</div>);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Find Differences</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Paste file\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Paste file\"\n//             />\n//             <div>\n//                 <button onClick={compareInputs}>Compare</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences || <p>No differences detected or input is empty.</p>}\n//             </div>\n//         </div>\n//     );\n// }\n// export default JsonComparator;\n\n// 777\n// import React, { useState } from 'react';\n// import { diffWordsWithSpace } from 'diff';  // Importing the function for word-level diffs\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareInputs = () => {\n//         // Use diffWordsWithSpace for word-level comparison\n//         const diff = diffWordsWithSpace(inputOne, inputTwo);\n//         if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n//             setDifferences('No differences found.');\n//         } else {\n//             const formattedDiff = diff.map((part, index) => {\n//                 const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//                 const style = { backgroundColor: color, padding: '0.1em 0', marginRight: '2px' }; // Add styles for clarity\n//                 return <span key={index} style={style}>{part.value}</span>;\n//             });\n//             setDifferences(<div style={{ whiteSpace: 'pre-wrap', lineHeight: '1.6' }}>{formattedDiff}</div>);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>JSON/Code Comparator</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <div>\n//                 <button onClick={compareInputs}>Compare</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences || <p>No differences detected or input is empty.</p>}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n//9999\n\n// import React, { useState } from 'react';\n// import { diffLines } from 'diff';  // Importing the function for line-level diffs\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareInputs = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n//             setDifferences('No differences found.');\n//         } else {\n//             let lineNumber = 1;\n//             const formattedDiff = diff.map((part, index) => {\n//                 const lines = part.value.split('\\n');\n//                 // Construct line number display\n//                 const lineNumbers = lines.slice(0, lines.length - 1).map((_, lineIndex) => {\n//                     return `${lineNumber++}`;\n//                 }).join('\\n');\n\n//                 const style = {\n//                     color: part.added ? 'green' : part.removed ? 'red' : 'black',\n//                     textDecoration: part.added ? 'underline' : part.removed ? 'line-through' : 'none'\n//                 };\n\n//                 return (\n//                     <div key={index}>\n//                         <pre style={{ display: 'inline', marginRight: '10px' }}>{lineNumbers}</pre>\n//                         <span style={style}>{part.value}</span>\n//                     </div>\n//                 );\n//             });\n//             setDifferences(<div style={{ whiteSpace: 'pre-wrap', lineHeight: '1.6' }}>{formattedDiff}</div>);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>JSON/Code Comparator</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <div>\n//                 <button onClick={compareInputs}>Compare</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences || <p>No differences detected or input is empty.</p>}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n///10101010\n\nimport React, { useState } from 'react';\nimport { diffWordsWithSpace } from 'diff'; // Importing the function for word-level diffs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JsonComparator() {\n  _s();\n  const [inputOne, setInputOne] = useState('');\n  const [inputTwo, setInputTwo] = useState('');\n  const [differences, setDifferences] = useState('');\n  const handleInputOneChange = event => {\n    setInputOne(event.target.value);\n  };\n  const handleInputTwoChange = event => {\n    setInputTwo(event.target.value);\n  };\n  const compareInputs = () => {\n    // Use diffWordsWithSpace for word-level comparison\n    const diff = diffWordsWithSpace(inputOne, inputTwo);\n    if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n      setDifferences('No differences found.');\n    } else {\n      const formattedDiff = diff.map((part, index) => {\n        const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n        const style = {\n          backgroundColor: color,\n          padding: '0.1em 0',\n          marginRight: '2px'\n        }; // Add styles for clarity\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: style,\n          children: part.value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 24\n        }, this);\n      });\n      setDifferences( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          lineHeight: '1.6'\n        },\n        children: formattedDiff\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 28\n      }, this));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JSON/Code Comparator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: inputOne,\n      onChange: handleInputOneChange,\n      rows: \"10\",\n      cols: \"50\",\n      placeholder: \"Enter JSON or code...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: inputTwo,\n      onChange: handleInputTwoChange,\n      rows: \"10\",\n      cols: \"50\",\n      placeholder: \"Enter JSON or code...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: compareInputs,\n        children: \"Compare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Differences:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 17\n      }, this), differences || /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No differences detected or input is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 605,\n    columnNumber: 9\n  }, this);\n}\n_s(JsonComparator, \"brfdNdYYBHyYk5mehcS1X7PdRyE=\");\n_c = JsonComparator;\nexport default JsonComparator;\nvar _c;\n$RefreshReg$(_c, \"JsonComparator\");","map":{"version":3,"names":["React","useState","diffWordsWithSpace","jsxDEV","_jsxDEV","JsonComparator","_s","inputOne","setInputOne","inputTwo","setInputTwo","differences","setDifferences","handleInputOneChange","event","target","value","handleInputTwoChange","compareInputs","diff","length","added","removed","formattedDiff","map","part","index","color","style","backgroundColor","padding","marginRight","children","fileName","_jsxFileName","lineNumber","columnNumber","whiteSpace","lineHeight","onChange","rows","cols","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/satyaranjan/Desktop/react/jsonvalidator/src/JsonComparator.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { diffLines, diffJson } from 'diff';  // Importing diff functions\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareJson = () => {\n//         try {\n//             const jsonOne = JSON.parse(inputOne);\n//             const jsonTwo = JSON.parse(inputTwo);\n//             const diff = diffJson(jsonOne, jsonTwo);\n//             const formattedDiff = diff.map(part => {\n//                 const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//                 return <span style={{ color: color }}>{part.value}</span>;\n//             });\n//             setDifferences(formattedDiff);\n//         } catch (error) {\n//             setDifferences(<p style={{ color: 'red' }}>Error parsing JSON: {error.message}</p>);\n//         }\n//     };\n\n//     const compareText = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         const formattedDiff = diff.map(part => {\n//             const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//             return <span style={{ color: color }}>{part.value}</span>;\n//         });\n//         setDifferences(formattedDiff);\n//     };\n\n//     return (\n//         <div>\n//             <h1>JSON/Code Comparator</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <div>\n//                 <button onClick={compareJson}>Compare JSON</button>\n//                 <button onClick={compareText}>Compare Text</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n// 222\n// import React, { useState } from 'react';\n// import { diffWordsWithSpace, diffLines } from 'diff'; // Functions for word and line diff\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleFileChange = (event, setter) => {\n//         const file = event.target.files[0];\n//         if (file) {\n//             const reader = new FileReader();\n//             reader.onload = (e) => {\n//                 setter(e.target.result);\n//             };\n//             reader.readAsText(file);\n//         }\n//     };\n\n//     const compareByLine = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         formatDiff(diff);\n//     };\n\n//     const compareByWord = () => {\n//         const diff = diffWordsWithSpace(inputOne, inputTwo);\n//         formatDiff(diff);\n//     };\n\n//     const formatDiff = (diff) => {\n//         const formattedDiff = diff.map((part, index) => (\n//             <span key={index} style={{ color: part.added ? 'green' : part.removed ? 'red' : 'black' }}>\n//                 {part.value}\n//             </span>\n//         ));\n//         setDifferences(formattedDiff);\n//     };\n\n//     return (\n//         <div>\n//             <h1>Compare JSON/Code</h1>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputOne)} />\n//                 <textarea\n//                     value={inputOne}\n//                     onChange={e => setInputOne(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Enter or upload JSON/code...\"\n//                 />\n//             </div>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputTwo)} />\n//                 <textarea\n//                     value={inputTwo}\n//                     onChange={e => setInputTwo(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Enter or upload JSON/code...\"\n//                 />\n//             </div>\n//             <div>\n//                 <button onClick={compareByLine}>Compare by Line</button>\n//                 <button onClick={compareByWord}>Compare by Word</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 <div style={{ whiteSpace: 'pre-wrap' }}>{differences}</div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n//3333\n\n// import React, { useState } from 'react';\n// import mammoth from 'mammoth';\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n\n//     const handleFileChange = (event, setter) => {\n//         const file = event.target.files[0];\n//         if (file) {\n//             mammoth.extractRawText({ arrayBuffer: file.slice() })\n//                 .then(result => {\n//                     setter(result.value);  // Set the extracted text in the textarea\n//                 })\n//                 .catch(err => {\n//                     setter(`Error reading file: ${err.message}`);\n//                 });\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Upload and Display Word Document</h1>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputOne)} accept=\".docx\" />\n//                 <textarea\n//                     value={inputOne}\n//                     onChange={e => setInputOne(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Text from the uploaded document will appear here...\"\n//                 />\n//             </div>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputTwo)} accept=\".docx\" />\n//                 <textarea\n//                     value={inputTwo}\n//                     onChange={e => setInputTwo(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Text from the uploaded document will appear here...\"\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n// 44444\n// import React, { useState } from 'react';\n// import { diffWordsWithSpace, diffLines } from 'diff'; // Functions for word and line diff\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleFileChange = (event, setter) => {\n//         const file = event.target.files[0];\n//         if (file) {\n//             const reader = new FileReader();\n//             reader.onload = (e) => {\n//                 console.log(\"File read successfully: \", e.target.result.substring(0, 100)); // Log first 100 characters of the file\n//                 setter(e.target.result);\n//             };\n//             reader.onerror = (error) => {\n//                 console.error(\"Error reading file: \", error);\n//                 setter(\"Failed to read file.\");\n//             };\n//             reader.readAsText(file);\n//         } else {\n//             console.log(\"No file chosen or file read was aborted.\");\n//         }\n//     };\n\n//     const compareByLine = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         formatDiff(diff);\n//     };\n\n//     const compareByWord = () => {\n//         const diff = diffWordsWithSpace(inputOne, inputTwo);\n//         formatDiff(diff);\n//     };\n\n//     const formatDiff = (diff) => {\n//         const formattedDiff = diff.map((part, index) => (\n//             <span key={index} style={{ color: part.added ? 'green' : part.removed ? 'red' : 'black' }}>\n//                 {part.value}\n//             </span>\n//         ));\n//         setDifferences(formattedDiff);\n//     };\n\n//     return (\n//         <div>\n//             <h1>Compare JSON/Code</h1>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputOne)} />\n//                 <textarea\n//                     value={inputOne}\n//                     onChange={e => setInputOne(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Enter or upload JSON/code...\"\n//                 />\n//             </div>\n//             <div>\n//                 <input type=\"file\" onChange={(e) => handleFileChange(e, setInputTwo)} />\n//                 <textarea\n//                     value={inputTwo}\n//                     onChange={e => setInputTwo(e.target.value)}\n//                     rows=\"10\"\n//                     cols=\"50\"\n//                     placeholder=\"Enter or upload JSON/code...\"\n//                 />\n//             </div>\n//             <div>\n//                 <button onClick={compareByLine}>Compare by Line</button>\n//                 <button onClick={compareByWord}>Compare by Word</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 <div style={{ whiteSpace: 'pre-wrap' }}>{differences}</div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n//55555\n\n// import React, { useState } from 'react';\n// import { diffLines, diffJson } from 'diff';  // Importing diff functions\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareJson = () => {\n//         try {\n//             const jsonOne = JSON.parse(inputOne);\n//             const jsonTwo = JSON.parse(inputTwo);\n//             const diff = diffJson(jsonOne, jsonTwo);\n//             const formattedDiff = diff.map(part => {\n//                 const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//                 return <span style={{ color: color }}>{part.value}</span>;\n//             });\n//             setDifferences(formattedDiff);\n//         } catch (error) {\n//             setDifferences(<p style={{ color: 'red' }}>Error parsing JSON: {error.message}</p>);\n//         }\n//     };\n\n//     const compareText = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         const formattedDiff = diff.map(part => {\n//             const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//             return <span style={{ color: color }}>{part.value}</span>;\n//         });\n//         setDifferences(formattedDiff);\n//     };\n\n//     return (\n//         <div>\n//             <h1>JSON/Code Comparator</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <div>\n//                 <button onClick={compareJson}>Compare JSON</button>\n//                 <button onClick={compareText}>Compare Text</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n//6666\n\n// import React, { useState } from 'react';\n// import { diffLines, diffJson } from 'diff';  // Importing diff functions\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState(null);\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareInputs = () => {\n//         // Attempt JSON comparison first\n//         try {\n//             const jsonOne = JSON.parse(inputOne);\n//             const jsonTwo = JSON.parse(inputTwo);\n//             const diff = diffJson(jsonOne, jsonTwo);\n//             if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n//                 setDifferences('No differences found.');\n//             } else {\n//                 const formattedDiff = diff.map((part, index) => {\n//                     const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//                     return <span key={index} style={{ color: color }}>{part.value}</span>;\n//                 });\n//                 setDifferences(<div>{formattedDiff}</div>);\n//             }\n//         } catch {\n//             // Fallback to plain text comparison if JSON fails\n//             const diff = diffLines(inputOne, inputTwo);\n//             if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n//                 setDifferences('No differences found.');\n//             } else {\n//                 const formattedDiff = diff.map((part, index) => {\n//                     const color = part.added ? 'green' : part.removed ? 'red' : 'black';\n//                     return <span key={index} style={{ color: color }}>{part.value}</span>;\n//                 });\n//                 setDifferences(<div style={{ whiteSpace: 'pre-wrap' }}>{formattedDiff}</div>);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Find Differences</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Paste file\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Paste file\"\n//             />\n//             <div>\n//                 <button onClick={compareInputs}>Compare</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences || <p>No differences detected or input is empty.</p>}\n//             </div>\n//         </div>\n//     );\n// }\n// export default JsonComparator;\n\n// 777\n// import React, { useState } from 'react';\n// import { diffWordsWithSpace } from 'diff';  // Importing the function for word-level diffs\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareInputs = () => {\n//         // Use diffWordsWithSpace for word-level comparison\n//         const diff = diffWordsWithSpace(inputOne, inputTwo);\n//         if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n//             setDifferences('No differences found.');\n//         } else {\n//             const formattedDiff = diff.map((part, index) => {\n//                 const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n//                 const style = { backgroundColor: color, padding: '0.1em 0', marginRight: '2px' }; // Add styles for clarity\n//                 return <span key={index} style={style}>{part.value}</span>;\n//             });\n//             setDifferences(<div style={{ whiteSpace: 'pre-wrap', lineHeight: '1.6' }}>{formattedDiff}</div>);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>JSON/Code Comparator</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <div>\n//                 <button onClick={compareInputs}>Compare</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences || <p>No differences detected or input is empty.</p>}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n\n//9999\n\n// import React, { useState } from 'react';\n// import { diffLines } from 'diff';  // Importing the function for line-level diffs\n\n// function JsonComparator() {\n//     const [inputOne, setInputOne] = useState('');\n//     const [inputTwo, setInputTwo] = useState('');\n//     const [differences, setDifferences] = useState('');\n\n//     const handleInputOneChange = (event) => {\n//         setInputOne(event.target.value);\n//     };\n\n//     const handleInputTwoChange = (event) => {\n//         setInputTwo(event.target.value);\n//     };\n\n//     const compareInputs = () => {\n//         const diff = diffLines(inputOne, inputTwo);\n//         if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n//             setDifferences('No differences found.');\n//         } else {\n//             let lineNumber = 1;\n//             const formattedDiff = diff.map((part, index) => {\n//                 const lines = part.value.split('\\n');\n//                 // Construct line number display\n//                 const lineNumbers = lines.slice(0, lines.length - 1).map((_, lineIndex) => {\n//                     return `${lineNumber++}`;\n//                 }).join('\\n');\n                \n//                 const style = {\n//                     color: part.added ? 'green' : part.removed ? 'red' : 'black',\n//                     textDecoration: part.added ? 'underline' : part.removed ? 'line-through' : 'none'\n//                 };\n\n//                 return (\n//                     <div key={index}>\n//                         <pre style={{ display: 'inline', marginRight: '10px' }}>{lineNumbers}</pre>\n//                         <span style={style}>{part.value}</span>\n//                     </div>\n//                 );\n//             });\n//             setDifferences(<div style={{ whiteSpace: 'pre-wrap', lineHeight: '1.6' }}>{formattedDiff}</div>);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>JSON/Code Comparator</h1>\n//             <textarea\n//                 value={inputOne}\n//                 onChange={handleInputOneChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <textarea\n//                 value={inputTwo}\n//                 onChange={handleInputTwoChange}\n//                 rows=\"10\"\n//                 cols=\"50\"\n//                 placeholder=\"Enter JSON or code...\"\n//             />\n//             <div>\n//                 <button onClick={compareInputs}>Compare</button>\n//             </div>\n//             <div>\n//                 <h2>Differences:</h2>\n//                 {differences || <p>No differences detected or input is empty.</p>}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default JsonComparator;\n\n///10101010\n\n\nimport React, { useState } from 'react';\nimport { diffWordsWithSpace } from 'diff';  // Importing the function for word-level diffs\n\nfunction JsonComparator() {\n    const [inputOne, setInputOne] = useState('');\n    const [inputTwo, setInputTwo] = useState('');\n    const [differences, setDifferences] = useState('');\n\n    const handleInputOneChange = (event) => {\n        setInputOne(event.target.value);\n    };\n\n    const handleInputTwoChange = (event) => {\n        setInputTwo(event.target.value);\n    };\n\n    const compareInputs = () => {\n        // Use diffWordsWithSpace for word-level comparison\n        const diff = diffWordsWithSpace(inputOne, inputTwo);\n        if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n            setDifferences('No differences found.');\n        } else {\n            const formattedDiff = diff.map((part, index) => {\n                const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n                const style = { backgroundColor: color, padding: '0.1em 0', marginRight: '2px' }; // Add styles for clarity\n                return <span key={index} style={style}>{part.value}</span>;\n            });\n            setDifferences(<div style={{ whiteSpace: 'pre-wrap', lineHeight: '1.6' }}>{formattedDiff}</div>);\n        }\n    };\n\n    return (\n        <div>\n            <h1>JSON/Code Comparator</h1>\n            <textarea\n                value={inputOne}\n                onChange={handleInputOneChange}\n                rows=\"10\"\n                cols=\"50\"\n                placeholder=\"Enter JSON or code...\"\n            />\n            <textarea\n                value={inputTwo}\n                onChange={handleInputTwoChange}\n                rows=\"10\"\n                cols=\"50\"\n                placeholder=\"Enter JSON or code...\"\n            />\n            <div>\n                <button onClick={compareInputs}>Compare</button>\n            </div>\n            <div>\n                <h2>Differences:</h2>\n                {differences || <p>No differences detected or input is empty.</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default JsonComparator;\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}