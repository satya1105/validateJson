{"ast":null,"code":"import React,{useState}from'react';import{diffWordsWithSpace}from'diff';// Importing the function for word-level diffs\nimport'./JsonComparator.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function JsonComparator(){const[inputOne,setInputOne]=useState('');const[inputTwo,setInputTwo]=useState('');const[differences,setDifferences]=useState('');const handleInputOneChange=event=>{setInputOne(event.target.value);};const handleInputTwoChange=event=>{setInputTwo(event.target.value);};const compareInputs=()=>{// Use diffWordsWithSpace for word-level comparison\nconst diff=diffWordsWithSpace(inputOne,inputTwo);if(diff.length===1&&!diff[0].added&&!diff[0].removed){setDifferences('No differences found.');}else{const formattedDiff=diff.map((part,index)=>{const color=part.added?'green':part.removed?'red':'grey';const style={backgroundColor:color,padding:'0.1em 0',marginRight:'2px'};// Add styles for clarity\nreturn/*#__PURE__*/_jsx(\"span\",{style:style,children:part.value},index);});setDifferences(/*#__PURE__*/_jsx(\"div\",{style:{whiteSpace:'pre-wrap',lineHeight:'1.6'},children:formattedDiff}));}};const clearInputs=()=>{setInputOne('');setInputTwo('');setDifferences('');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"json-heading\",children:\"Check Difference\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"textareas-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"diff-text-area-left\",value:inputOne,onChange:handleInputOneChange,rows:\"10\",cols:\"50\",placeholder:\"Enter Text...\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"diff-text-area-right\",value:inputTwo,onChange:handleInputTwoChange,rows:\"10\",cols:\"50\",placeholder:\"Enter Text...\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:compareInputs,children:\"Find Differences\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:clearInputs,children:\"Clear\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Differences:\"}),differences||/*#__PURE__*/_jsx(\"p\",{children:\"No differences detected or input is empty.\"})]})]});}export default JsonComparator;","map":{"version":3,"names":["React","useState","diffWordsWithSpace","jsx","_jsx","jsxs","_jsxs","JsonComparator","inputOne","setInputOne","inputTwo","setInputTwo","differences","setDifferences","handleInputOneChange","event","target","value","handleInputTwoChange","compareInputs","diff","length","added","removed","formattedDiff","map","part","index","color","style","backgroundColor","padding","marginRight","children","whiteSpace","lineHeight","clearInputs","className","onChange","rows","cols","placeholder","onClick"],"sources":["/Users/satyaranjan/Documents/playground/validateJson/src/JsonComparator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { diffWordsWithSpace } from 'diff';  // Importing the function for word-level diffs\nimport './JsonComparator.css';\n\nfunction JsonComparator() {\n    const [inputOne, setInputOne] = useState('');\n    const [inputTwo, setInputTwo] = useState('');\n    const [differences, setDifferences] = useState('');\n\n    const handleInputOneChange = (event) => {\n        setInputOne(event.target.value);\n    };\n\n    const handleInputTwoChange = (event) => {\n        setInputTwo(event.target.value);\n    };\n\n    const compareInputs = () => {\n        // Use diffWordsWithSpace for word-level comparison\n        const diff = diffWordsWithSpace(inputOne, inputTwo);\n        if (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n            setDifferences('No differences found.');\n        } else {\n            const formattedDiff = diff.map((part, index) => {\n                const color = part.added ? 'green' : part.removed ? 'red' : 'grey';\n                const style = { backgroundColor: color, padding: '0.1em 0', marginRight: '2px' }; // Add styles for clarity\n                return <span key={index} style={style}>{part.value}</span>;\n            });\n            setDifferences(<div style={{ whiteSpace: 'pre-wrap', lineHeight: '1.6' }}>{formattedDiff}</div>);\n        }\n    };\n\n    const clearInputs = () => {\n        setInputOne('');\n        setInputTwo('');\n        setDifferences('');\n    };\n\n    return (\n        <div>\n            <h3 className='json-heading'>Check Difference</h3>\n            <div className='textareas-container'>\n                <textarea\n                    className='diff-text-area-left'\n                    value={inputOne}\n                    onChange={handleInputOneChange}\n                    rows=\"10\"\n                    cols=\"50\"\n                    placeholder=\"Enter Text...\"\n                />\n                <textarea\n                    className='diff-text-area-right'\n                    value={inputTwo}\n                    onChange={handleInputTwoChange}\n                    rows=\"10\"\n                    cols=\"50\"\n                    placeholder=\"Enter Text...\"\n                />\n            </div>\n            <div>\n                <button className='btn' onClick={compareInputs}>Find Differences</button>\n                <button className='btn' onClick={clearInputs}>Clear</button>\n            </div>\n            <div>\n                <h2>Differences:</h2>\n                {differences || <p>No differences detected or input is empty.</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default JsonComparator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}