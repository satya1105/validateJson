{"ast":null,"code":"var _jsxFileName = \"/Users/satyaranjan/Desktop/react/jsonvalidator/src/JsonTool.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JsonTool() {\n  _s();\n  const [jsonInput, setJsonInput] = useState('');\n  const [error, setError] = useState('');\n  const handleInputChange = event => {\n    setJsonInput(event.target.value);\n    setError(''); // Clear previous errors when user edits text\n  };\n  const validateJson = () => {\n    try {\n      JSON.parse(jsonInput);\n      setError('');\n      alert('JSON is valid!');\n    } catch (err) {\n      setError(`Invalid JSON! Error: ${err.message}`);\n    }\n  };\n  const compressJson = () => {\n    try {\n      const parsedJson = JSON.parse(jsonInput);\n      setJsonInput(JSON.stringify(parsedJson));\n      setError('');\n      alert('JSON has been compressed.');\n    } catch (err) {\n      setError(`Cannot compress JSON! Error: ${err.message}`);\n    }\n  };\n  const clearJson = () => {\n    setJsonInput('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JSON Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: jsonInput,\n      onChange: handleInputChange,\n      rows: \"100\",\n      cols: \"500\",\n      placeholder: \"Enter JSON here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: validateJson,\n        children: \"Validate JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: compressJson,\n        children: \"Compress JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearJson,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(JsonTool, \"oYvaubR3YjAjlunLQ/GAcTGoBH4=\");\n_c = JsonTool;\nexport default JsonTool;\nvar _c;\n$RefreshReg$(_c, \"JsonTool\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","JsonTool","_s","jsonInput","setJsonInput","error","setError","handleInputChange","event","target","value","validateJson","JSON","parse","alert","err","message","compressJson","parsedJson","stringify","clearJson","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","rows","cols","placeholder","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/satyaranjan/Desktop/react/jsonvalidator/src/JsonTool.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction JsonTool() {\n    const [jsonInput, setJsonInput] = useState('');\n    const [error, setError] = useState('');\n\n    const handleInputChange = (event) => {\n        setJsonInput(event.target.value);\n        setError(''); // Clear previous errors when user edits text\n    };\n\n    const validateJson = () => {\n        try {\n            JSON.parse(jsonInput);\n            setError('');\n            alert('JSON is valid!');\n        } catch (err) {\n            setError(`Invalid JSON! Error: ${err.message}`);\n        }\n    };\n\n    const compressJson = () => {\n        try {\n            const parsedJson = JSON.parse(jsonInput);\n            setJsonInput(JSON.stringify(parsedJson));\n            setError('');\n            alert('JSON has been compressed.');\n        } catch (err) {\n            setError(`Cannot compress JSON! Error: ${err.message}`);\n        }\n    };\n\n    const clearJson = () => {\n        setJsonInput('');\n        setError('');\n    };\n\n    return (\n        <div>\n            <h1>JSON Tool</h1>\n            <textarea\n                value={jsonInput}\n                onChange={handleInputChange}\n                rows=\"100\"\n                cols=\"500\"\n                placeholder=\"Enter JSON here...\"\n            />\n            <div>\n                <button onClick={validateJson}>Validate JSON</button>\n                <button onClick={compressJson}>Compress JSON</button>\n                <button onClick={clearJson}>Clear</button>\n            </div>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </div>\n    );\n}\n\nexport default JsonTool;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}